// Copyright 2025 The Periph Authors. All rights reserved.
// Use of this source code is governed under the Apache License, Version 2.0
// that can be found in the LICENSE file.

package sht4x

import (
	"periph.io/x/conn/v3/i2c/i2ctest"
)

// Auto-Generated by i2ctest.BusTest

var recordingData = map[string][]i2ctest.IO{
	"TestBasic": {
		{Addr: 0x44, W: []uint8{0x89}},
		{Addr: 0x44, R: []uint8{0xd, 0x20, 0x47, 0x61, 0x1, 0x11}}},
	"TestHeater": {
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x63, 0x36, 0x9a, 0x5a, 0x7c, 0xd}},
		{Addr: 0x44, W: []uint8{0x15}},
		{Addr: 0x44, R: []uint8{0x67, 0xa0, 0x86, 0x5a, 0xf9, 0x82}},
		{Addr: 0x44, W: []uint8{0x15}},
		{Addr: 0x44, R: []uint8{0x69, 0x28, 0x28, 0x5b, 0x27, 0x6d}},
		{Addr: 0x44, W: []uint8{0x15}},
		{Addr: 0x44, R: []uint8{0x6a, 0x26, 0x1a, 0x5b, 0x16, 0x99}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x63, 0x4a, 0x1f, 0x5a, 0x53, 0xa5}},
		{Addr: 0x44, W: []uint8{0x24}},
		{Addr: 0x44, R: []uint8{0x79, 0x7c, 0xfc, 0x5c, 0x84, 0x6c}},
		{Addr: 0x44, W: []uint8{0x24}},
		{Addr: 0x44, R: []uint8{0x81, 0x14, 0xd1, 0x5c, 0x64, 0xad}},
		{Addr: 0x44, W: []uint8{0x24}},
		{Addr: 0x44, R: []uint8{0x85, 0xd2, 0xb3, 0x5a, 0x5d, 0xba}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x63, 0x7f, 0x2f, 0x5b, 0x84, 0xc2}},
		{Addr: 0x44, W: []uint8{0x32}},
		{Addr: 0x44, R: []uint8{0x89, 0x3c, 0xd9, 0x5e, 0xae, 0xe8}},
		{Addr: 0x44, W: []uint8{0x32}},
		{Addr: 0x44, R: []uint8{0x95, 0xe0, 0x7a, 0x5c, 0xbe, 0x72}},
		{Addr: 0x44, W: []uint8{0x32}},
		{Addr: 0x44, R: []uint8{0x9d, 0xaa, 0xab, 0x55, 0xc0, 0x56}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x63, 0xbb, 0xac, 0x57, 0xed, 0x45}},
		{Addr: 0x44, W: []uint8{0x1e}},
		{Addr: 0x44, R: []uint8{0x6d, 0x4a, 0x72, 0x55, 0x53, 0x3c}},
		{Addr: 0x44, W: []uint8{0x1e}},
		{Addr: 0x44, R: []uint8{0x6e, 0x1e, 0xe5, 0x4e, 0x61, 0xef}},
		{Addr: 0x44, W: []uint8{0x1e}},
		{Addr: 0x44, R: []uint8{0x6e, 0x7e, 0x5e, 0x49, 0x91, 0xc3}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x63, 0xc5, 0x4b, 0x57, 0xeb, 0xe3}},
		{Addr: 0x44, W: []uint8{0x2f}},
		{Addr: 0x44, R: []uint8{0x93, 0x28, 0xde, 0x3b, 0xa5, 0x20}},
		{Addr: 0x44, W: []uint8{0x2f}},
		{Addr: 0x44, R: []uint8{0x97, 0x12, 0x43, 0x25, 0x59, 0xdc}},
		{Addr: 0x44, W: []uint8{0x2f}},
		{Addr: 0x44, R: []uint8{0x99, 0x2, 0x6d, 0x1f, 0x1f, 0x1b}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x65, 0x48, 0x27, 0x51, 0x9e, 0xb4}},
		{Addr: 0x44, W: []uint8{0x39}},
		{Addr: 0x44, R: []uint8{0xb3, 0xb8, 0x3b, 0x21, 0xa1, 0x64}},
		{Addr: 0x44, W: []uint8{0x39}},
		{Addr: 0x44, R: []uint8{0xb9, 0xd0, 0xd7, 0x15, 0x79, 0xe8}},
		{Addr: 0x44, W: []uint8{0x39}},
		{Addr: 0x44, R: []uint8{0xbc, 0xb8, 0xa2, 0x14, 0x4b, 0xbb}}},
	"TestReset": {
		{Addr: 0x44, W: []uint8{0x94}}},
	"TestSense": {
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xf4, 0xc8, 0x4c, 0x9b, 0x6f}}},
	"TestSenseContinuous": {
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xee, 0x50, 0x4c, 0xbf, 0x2d}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xda, 0x51, 0x4c, 0xeb, 0x97}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xdb, 0x60, 0x4c, 0xf6, 0x98}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xda, 0x51, 0x4d, 0x24, 0xa}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xd4, 0x4e, 0x4d, 0x3f, 0xa3}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xca, 0x12, 0x4d, 0x50, 0x36}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xba, 0xea, 0x4d, 0x71, 0x81}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xb6, 0x97, 0x4d, 0x99, 0xf9}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xb3, 0x62, 0x4d, 0xb0, 0xf7}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0xb3, 0x62, 0x4d, 0xc3, 0x5c}},
		{Addr: 0x44, W: []uint8{0xfd}},
		{Addr: 0x44, R: []uint8{0x66, 0x9e, 0xa8, 0x4d, 0xce, 0x10}}},
}
